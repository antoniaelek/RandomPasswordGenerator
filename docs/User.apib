## Group User

A `User` object has the following attributes:

+ `id` (required) - unique identifier of the user
+ `name` (required) - the user's name
+ `email` (required) - email of the user
+ `dateCreated` (required) - time and date when the user account was created
+ `dateCreated` (required) - users' stored passwords

# Get User [/User/{id}]
# Get User [GET]
Get an existing user by id.

+ Parameters

    + id: 6 - Unique identifier of a user
+ Response 200 (application/json; charset=utf-8)
    + Body

            {
              "success": true,
              "name": "user",
              "id": "527c4104-f8c5-4022-8291-f84025482c26",
              "Email": "user@mail.com",
              "dateCreated": "2016-11-10T18:58:00.99815",
              "passwords" : []
            }

    + Schema

            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "name": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "dateCreated": {
                  "type": "string"
                },
                "passwords": {
                  "type": "array",
                  "items": {
                      "type": "object",
                      "properties": {
                        "password": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "hint": {
                          "type": "string"
                        },
                        "userId": {
                          "type": "string"
                        },
                        "dateCreated": {
                          "type": "string"
                        }
                    },
                    "required": [
                        "password",
                        "id",
                        "hint",
                        "userid",
                        "dateCreated"
                      ]
                    }
                  },
                }
              },
              "required": [
                "success",
                "name",
                "id",
                "email",
                "dateCreated",
                "passwords"
              ]
            }

+ Response 404 (application/json; charset=utf-8)
    + Body

            {
              "success": false
            }

    + Schema


            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                }
              },
              "required": [
                "success"
              ]
            }

# Generate Password [/Password]
## Generate Password [POST]
Generate random password.

+ Request (application/json)

        {
            "length": 3,
            "upperLetters": true,
            "lowerLetters": true,
            "digits": true,
        }

    + Schema

            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "length": {
                  "type": "number",
                  "minimum": 3,
                  "exclusiveMinimum": false
                },
                "upperLetters": {
                  "type": "boolean"
                },
                "lowerLetters": {
                  "type": "boolean"
                },
                "digits": {
                  "type": "boolean"
                }
              },
              "required": [
                "length"
              ]
            }

+ Response 200 (application/json; charset=utf-8)
    + Body

            {
              "success": true,
              "password": "znj",
              "id": "527c4104-f8c5-4022-8291-f84025482c26",
              "hint": "user@mail.com",
              "userId" : "527c4104-f8c5-4022-8291-f84025482c26",
              "dateCreated": "2016-11-10T18:58:00.99815"
            }

    + Schema

            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "password": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "hint": {
                  "type": "string"
                },
                "userId": {
                  "type": "string"
                },
                "dateCreated": {
                  "type": "string"
                }
              },
              "required": [
                "success",
                "password",
                "id",
                "hint",
                "userid",
                "dateCreated"
              ]
            }

+ Response 400 (application/json; charset=utf-8)
    + Body

            {
              "success": false
            }

    + Schema


            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                }
              },
              "required": [
                "success"
              ]
            }

# Update Password [/Password/{id}]
# Update Password [PUT]
Update an existing password.

+ Parameters

    + id: 6 - Unique identifier of a stored password

+ Request (application/json)

        {
            "id": 6
        }

+ Response 200 (application/json; charset=utf-8)
    + Body

            {
              "success": true,
              "password": "znj",
              "id": "527c4104-f8c5-4022-8291-f84025482c26",
              "hint": "user@mail.com",
              "userId" : "527c4104-f8c5-4022-8291-f84025482c26",
              "dateCreated": "2016-11-10T18:58:00.99815"
            }

    + Schema

            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "password": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "hint": {
                  "type": "string"
                },
                "userId": {
                  "type": "string"
                },
                "dateCreated": {
                  "type": "string"
                }
              },
              "required": [
                "success",
                "password",
                "id",
                "hint",
                "userid",
                "dateCreated"
              ]
            }

+ Response 400 (application/json; charset=utf-8)
    + Body

            {
              "success": false
            }

    + Schema


            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                }
              },
              "required": [
                "success"
              ]
            }

# Delete Password [/Password/{id}]
# Delete Password [DELETE]
Delete an existing password.

+ Parameters

    + id: 6 - Unique identifier of a stored password

+ Response 200 (application/json; charset=utf-8)